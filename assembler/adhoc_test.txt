.data
var1 .dword 38209 #test comment 
# 1111 1100 0000 0000 0000 0000 (hex)41 -> fc000041 G
# 1111 1100 0000 0000 0000 0001 (hex)95 -> fc000195 G
var2 .dword 110
# 1111 1100 0000 0000 0000 0010 (hex)6e -> fc00026e G
# 1111 1100 0000 0000 0000 0011 (hex)00 -> fc000300 G
var3 .dword 12
# 1111 1100 0000 0000 0000 0100 (hex)0c -> fc00040c G
# 1111 1100 0000 0000 0000 0101 (hex)00 -> fc000500 G
#test comment
.code

# this is a test comment
# to run this code simply replace the read file at the top of the assembler.
# then re-compile thew whole program so that memfile_test.dat is up to date.
# for all snake commands see the test.txt file 
# test comment

add $g1, $g0, $g2 # 0000 0000 1000 0100 1100 ... -> 0084c000 G
blez $g2, targetTwo # 0111 0100 1100 0000 0000 ... hex(e) -> 74c0000e G
add $g3, $g4, 123 # 0000 0101 0001 0100 ... (hex)7b -> 0514007b G
sub $g5, $g6, $g1 # 0000 1001 1001 1100 1000 ... -> 099c8000 G

# targetOne at 4
@targetOne
sub $u0, $u1, 300 # 0000 1110 1111 0000 ... (hex)12c -> 0ef0012c G
bgtz $u3, targetThree # 0111 1111 1000 ... (hex)18 -> 7f800018 G
multh $u3, $u4, $l0 # 0001 0011 1011 1110 0100 .... -> 13be4000 G
multh $p0, $g6, 89 # 0001 0110 1001 1100 0000 ... (hex)59 -> 169c0059 G
slr $u2, $p0, $l0 # 0001 1011 0110 1010 0100 ... -> 1b6a4000 G
beq $g4, $u4`   , targetTwo # 1000 0101 0111 1100 ... 1110 -> 857c000e  10000 0 0101 0000 1111 00 -> 8143c00e
slr $u1, $s0, 10 # 0001 1111 0010 0000 ... 1010 -> 1f20000a G
xor $u2, $z0, $s0 # 0010 0011 0100 0010 0000... ->  23420000 G
jal targetThree # 0110 1100 ... 0001 1000 -> 6c000018 G
xor $u3, $g5, 314 # 0010 0111 1001 1000 ... 0001 0011 1010 -> 2798013a G

#targetTwo at 14
@targetTwo
and $g1, $u3, $u2 # 0010 1000 1011 1011 0100 ... -> 28bb4000 G
bne $u3, $s0, targetOne # 1000 1111 1010 0000 .... 0100 -> 8fa00004 G 
and $p0, $g6, 69 # 0010 1110 1001 1100 ... 0100 0101 -> 2e9c0045 G
or $g3, $g4, $g5 # 0011 0001 0001 0101 1000 00... -> 31158000 G 
or $u0, $u2, 7200 # 0011 0110 1111 0100 0001 1100 0010 0000 -> 36f41c20 G 
nor $g4, $u1, $u3 # 0011 1001 0111 0011 1000 00... -> 39738000 G 
nor $g3, $s0, 660 # 0011 1101 0010 0000 0000 0010 1001 0100 -> 3d200294 G
jump targetThree # 0110 0100 0000 0000 00 ...0001 1000 -> 64000018 G
blt $g3, $u1, targetOne # 1001 0101 0011 00 ...0100 -> 95300004 G
nand $g0, $z0, $u0 # 0100 0000 0100 0010 1100 00... -> 4042c000 G

#targetThree at 24
#test comment
@targetThree
#test comment
nand $g4, $z0, 20 # 0100 0101 0100 0000 00 ...0001 0100 -> 45400014 G
slt $g3, $u4, $g6 # 0100 1001 0011 1101 1100... -> 493dc000 G
slt $u1, $g2, 301 # 0100 1111 0000 1100 0000 0001 0010 1101 -> 4f0c012d G
lw $g0, var1 # 0101 0100 0100 0000 00 0000 -> 54400000 G
lw $u1, var2 # 0101 0111 0000 0000 00 ....0010 -> 5700002 G
lw $u4, var3 # 0101 0111 1100 0000 00 0100 -> 57c00004 G
sw $g6, var1 # 0101 1101 1100 0000 00 ....0000 -> 5dc00000 G
sw $p0, var2 # 0101 1110 1000 0000 00.... 0010 -> 5e800002 G
sw $u3, var3 # 0101 1111 1000 0000 00 .... 0100 -> 5f800004 G 